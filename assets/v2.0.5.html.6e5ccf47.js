import{r as l,o as p,a as t,b as n,e,F as r,f as s,g as o}from"./app.2025f35b.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/v2.0.5-1.b16f1bbe.png",D="/assets/v2.0.5-2.1e498efd.png",y="/assets/v2.0.5-3.49e87df4.png",d="/assets/v2.0.5-4.e199f50a.png",u="/assets/v2.0.5-5.dc40c7ba.png",m="/assets/v2.0.5-6.b700f03b.png",b="/assets/v2.0.5-7.187ddb37.png",h="/assets/v2.0.5-8.b01088c6.png",g="/assets/v2.0.5-9.af9cdad6.png",C="/assets/v2.0.5-10.5a466220.png",E="/assets/v2.0.5-11.6a73fe1f.png",f="/assets/v2.0.5-12.536af08f.png",_="/assets/v2.0.5-13.dce18470.png",v="/assets/v2.0.5-14.5ae1ac0e.png",w="/assets/v2.0.5-15.be0e0c5b.png",T="/assets/v2.0.5-16.8ecbb049.png";const k={},A=n("h1",{id:"go-doudou-v2-0-5-new-features-guide",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#go-doudou-v2-0-5-new-features-guide","aria-hidden":"true"},"#"),s(" go-doudou v2.0.5 New Features Guide")],-1),N=s("During the 2023 Spring Festival, the open-source Go language microservice framework go-doudou released its first official version of 2023, v2.0.5. This version mainly includes 9 new features. This article will introduce the usage and provide code examples in two parts: the CLI command-line code generator part and the microservice framework part. The code used in this article is available at "),F={href:"https://github.com/unionj-cloud/go-doudou-tutorials/tree/master/go-stats",target:"_blank",rel:"noopener noreferrer"},I=s("https://github.com/unionj-cloud/go-doudou-tutorials/tree/master/go-stats"),G=s(" and "),S={href:"https://github.com/unionj-cloud/go-doudou-tutorials/tree/master/gin2doudou",target:"_blank",rel:"noopener noreferrer"},x=s("https://github.com/unionj-cloud/go-doudou-tutorials/tree/master/gin2doudou"),P=s(". Please clone the code repository and refer to the example code for understanding."),q=o(`<h1 id="go-doudou-cli-code-generator" tabindex="-1"><a class="header-anchor" href="#go-doudou-cli-code-generator" aria-hidden="true">#</a> go-doudou CLI Code Generator</h1><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>Since the go-doudou CLI code generator iterates quite quickly, and if there are bugs they will be discovered during command execution and code compilation, without introducing online bugs, it is recommended to always install the main branch version.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go install -v github.com/unionj-cloud/go-doudou/v2@main</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_1-new-feature-generate-dto-structs-from-database-table-structures" tabindex="-1"><a class="header-anchor" href="#_1-new-feature-generate-dto-structs-from-database-table-structures" aria-hidden="true">#</a> 1. New Feature: Generate DTO Structs from Database Table Structures</h2><p>DTO stands for data transfer object, and structs of data structures that need to be transmitted over the network are generally called DTOs. The most common architectural solution for software development now is the layered architecture MVC. V refers to the view layer, and the current and future mainstream implementation solution is still front-end and back-end separation, with the view layer generally developed using front-end SPA frameworks such as Vuejs/Reactjs/Angularjs, etc. M refers to the model layer, including entity classes that map database table structures. C refers to the controller layer, and DTO belongs to this layer. It is not recommended to skip DTO and directly use entity classes in the model layer as data structures for network transmission. Best practice still requires DTO as a medium, with conversion between DTO and entity classes in the control layer code logic to achieve decoupling. This feature can directly map database table structures and generate DTO struct code with a single command, eliminating the manual definition work for developers.</p><p>Suppose there are several tables in the tutorial database as shown in the figure below. <img src="`+i+`" alt="Figure 1"> First, we need to configure the database connection in the .env file.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">DB_HOST=localhost</span></span>
<span class="line"><span style="color:#D4D4D4;">DB_PORT=3306</span></span>
<span class="line"><span style="color:#D4D4D4;">DB_USER=root</span></span>
<span class="line"><span style="color:#D4D4D4;">DB_PASSWD=1234</span></span>
<span class="line"><span style="color:#D4D4D4;">DB_SCHEMA=tutorial</span></span>
<span class="line"><span style="color:#D4D4D4;">DB_CHARSET=utf8mb4</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Then we execute the following command to generate the DTO.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou ddl --pre=cad_ -r</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>--pre</code>: Specify the table name prefix. In this example, it only generates DTOs for tables with the prefix cad_, optional</li><li><code>-r</code>: Reverse generation, indicating generating Go code from database table structures, <strong>required</strong></li></ul><p>After executing the command, we can see that the <code>dto</code> package and <code>entity</code> package are generated, and the table structure mapping entity classes of the model layer will be generated simultaneously. <img src="`+D+'" alt="Figure 2"> The <code>dto</code> package has a <code>dto_gen.go</code> file, with the <code>_gen</code> suffix to distinguish it from manually created files by developers. <img src="'+y+`" alt="Figure 3"> The &quot;You can edit it as your need&quot; prompt on line 3 indicates that developers can customize and modify this file. Repeated execution of the above command will not overwrite manual modifications by developers, as the code will only be incrementally generated, appended to the end of the file. The go:generate directive on line 11 is followed by the built-in name tool of go-doudou, used for batch modification of struct json tags, defaulting to camelCase with the first letter lowercase. The <code>CommonComment</code> struct in the screenshot is the DTO struct corresponding to the cad_common_comment table.</p><p>One thing to note is that repeated execution of the above command will decide whether to generate the DTO struct based on whether the entity class mapped to the database table structure in the <code>entity</code> package exists. That is, if a developer only deletes the <code>dto_gen.go</code> file or the struct code inside it, without deleting the corresponding entity class in the <code>entity</code> package, repeated execution of the above command will not regenerate the DTO corresponding to already existing entity classes in the <code>entity</code> package. If the database table structure is modified and needs to regenerate the DTO, both the corresponding entity class in the <code>entity</code> package and the corresponding DTO in the <code>dto</code> package must be deleted as a pair, and then execute the above command.</p><h2 id="_2-new-feature-generate-initial-go-doudou-project-from-swagger2-swagger3" tabindex="-1"><a class="header-anchor" href="#_2-new-feature-generate-initial-go-doudou-project-from-swagger2-swagger3" aria-hidden="true">#</a> 2. New Feature: Generate Initial go-doudou Project from Swagger2/Swagger3</h2><p>This feature refers to initializing a go-doudou microservice project through a json file compatible with Swagger 2 or Swagger 3 (OpenAPI 3.0) specifications, mainly including interface definition files, which can facilitate migration from other frameworks to go-doudou, such as from Java ecosystem&#39;s Spring Cloud/Spring boot or Go ecosystem&#39;s beego framework/gin framework, etc.</p><p>Just execute the following command in the same path as the Swagger file.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc init gin2doudou -f gin-admin-swagger.json</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,17),B=n("li",null,[n("code",null,"gin2doudou"),s(": Specify the project root directory folder name, which is also the default Go module name")],-1),O=n("code",null,"-f",-1),R=s(": Specify the Swagger file path, which can be a relative path, an absolute path, or a download link. This example uses the Swagger file from the well-known open source project "),V={href:"https://github.com/LyricTian/gin-admin",target:"_blank",rel:"noopener noreferrer"},j=s("https://github.com/LyricTian/gin-admin"),L=s("."),U=o('<p>Below is a code screenshot of the generated <code>svc.go</code> file <img src="'+d+'" alt="Figure 4"> Click the green triangle button on line 13 to continue generating Protobuf files and gRPC stub code. <img src="'+u+`" alt="Figure 5"> Click the green run button on line 12 to continue generating RESTful service code. Execute <code>go run cmd/main.go</code> to start the RESTful service.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  gin2doudou git:(master) \u2717 go run cmd/main.go                                                                                          </span></span>
<span class="line"><span style="color:#D4D4D4;">2023/01/29 11:03:04 maxprocs: Leaving GOMAXPROCS=16: CPU quota undefined</span></span>
<span class="line"><span style="color:#D4D4D4;">                           _                    _</span></span>
<span class="line"><span style="color:#D4D4D4;">                          | |                  | |</span></span>
<span class="line"><span style="color:#D4D4D4;">  __ _   ___   ______   __| |  ___   _   _   __| |  ___   _   _</span></span>
<span class="line"><span style="color:#D4D4D4;"> / _</span><span style="color:#CE9178;">\` </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> / _ </span><span style="color:#D7BA7D;">\\ </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">______</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> / _\`</span><span style="color:#D4D4D4;"> | / _ </span><span style="color:#D7BA7D;">\\ </span><span style="color:#D4D4D4;">| | | | / _</span><span style="color:#CE9178;">\` </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> / _ </span><span style="color:#D7BA7D;">\\ </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> (_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> (_) </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> (_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> (_) </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> (_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> (_) </span><span style="color:#D4D4D4;">||</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;"> </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">_, </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">__/          </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">_,_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">__/  </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">_,_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">_,_</span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">__/  </span><span style="color:#D7BA7D;">\\_</span><span style="color:#CE9178;">_,_</span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">  __/ </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;"> </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">___/</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF ================ Registered Routes ================</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF +----------------------------+--------+------------------------------+</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">            NAME            </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> METHOD </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;">           PATTERN            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF +----------------------------+--------+------------------------------+</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1Menus                 </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menus                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1PubLogin              </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/login            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1PubLoginExit          </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/login/exit       </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1PubRefreshtoken       </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/refreshtoken     </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1Roles                 </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/roles                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> ApiV1Users                 </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> POST   </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/users                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DeleteApiV1Menus_Id        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DELETE </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menus/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DeleteApiV1Roles_Id        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DELETE </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/roles/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DeleteApiV1Users_Id        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> DELETE </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/users/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Menus              </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menus                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Menus_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menus/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Menustree          </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menustree            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1PubCurrentMenutree </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/current/menutree </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1PubCurrentUser     </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/current/user     </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1PubLoginCaptcha    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/login/captcha    </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1PubLoginCaptchaid  </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/login/captchaid  </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Roles              </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/roles                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Roles_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/roles/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Rolesselect        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/rolesselect          </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Users              </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/users                </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetApiV1Users_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/users/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PutApiV1Menus_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PUT    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/menus/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PutApiV1PubCurrentPassword </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PUT    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/pub/current/password </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PutApiV1Roles_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PUT    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/roles/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PutApiV1Users_Id           </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> PUT    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /api/v1/users/:id            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDoc                     </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/doc               </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetOpenAPI                 </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/openapi.json      </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> Prometheus                 </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/prometheus        </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetConfig                  </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/config            </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetStatsvizWs              </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/statsviz/ws       </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetStatsviz                </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /go-doudou/statsviz/</span><span style="color:#D4D4D4;">*</span><span style="color:#CE9178;">        </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDebugPprofCmdline       </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /debug/pprof/cmdline         </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDebugPprofProfile       </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /debug/pprof/profile         </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDebugPprofSymbol        </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /debug/pprof/symbol          </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDebugPprofTrace         </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /debug/pprof/trace           </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GetDebugPprofIndex         </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> GET    </span><span style="color:#D4D4D4;">|</span><span style="color:#CE9178;"> /debug/pprof/</span><span style="color:#D4D4D4;">*</span><span style="color:#CE9178;">               </span><span style="color:#D4D4D4;">|</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF +----------------------------+--------+------------------------------+</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF ===================================================</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF Http server is listening at :6060</span></span>
<span class="line"><span style="color:#CE9178;">2023-01-29 11:03:04 INF Http server started </span><span style="color:#C586C0;">in</span><span style="color:#CE9178;"> 3.347258ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>Note that if you execute line 12 first, a main function for the RESTful service will be generated. If you execute line 13 first, a main function for the gRPC service will be generated. If a main function already exists, it will be skipped, and go-doudou will not make any modifications. If you want to start both RESTful and gRPC services simultaneously, you need to manually modify the main function. For specific code, please refer to the quick start tutorial on the go-doudou official website.</p><h2 id="_3-new-feature-go-language-http-client-automatic-gzip-compression-for-request-body" tabindex="-1"><a class="header-anchor" href="#_3-new-feature-go-language-http-client-automatic-gzip-compression-for-request-body" aria-hidden="true">#</a> 3. New Feature: Go Language HTTP Client Automatic Gzip Compression for Request Body</h2><p>The purpose of adding this feature is to compress large-sized request bodies, speed up network transmission, and improve performance. In the go-stats project, execute <code>go-doudou svc http -c</code> to generate the client package and HTTP client code encapsulating go-resty (unit test files and code need to be implemented by the developer). <img src="`+m+'" alt="Figure 6"> Gzip-related code is in lines 50-71 of the <code>client.go</code> file. <img src="'+b+`" alt="Figure 7"> Compared to previous versions, there is an additional input parameter of type <code>Options</code>, which acts as a switch. The caller can set whether to compress the request body through this switch when calling client methods.</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Options</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    GzipReqBody </span><span style="color:#4EC9B0;">bool</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4-new-feature-automatically-generate-enum-type-implementation-methods" tabindex="-1"><a class="header-anchor" href="#_4-new-feature-automatically-generate-enum-type-implementation-methods" aria-hidden="true">#</a> 4. New Feature: Automatically Generate Enum Type Implementation Methods</h2><p>go-doudou provides support for enum types, requiring enum types to implement the <code>IEnum</code> interface:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">IEnum</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">StringSetter</span><span style="color:#D4D4D4;">(value </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">StringGetter</span><span style="color:#D4D4D4;">() </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">UnmarshalJSON</span><span style="color:#D4D4D4;">(bytes []</span><span style="color:#4EC9B0;">byte</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">error</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">MarshalJSON</span><span style="color:#D4D4D4;">() ([]</span><span style="color:#4EC9B0;">byte</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>In previous versions, developers needed to implement this interface manually. With this new feature, code can be generated directly with a single command. <img src="`+h+`" alt="Figure 8"> As shown in the figure above, you can directly write the <code>//go:generate</code> directive shown on line 34 anywhere in the file where the enum type is defined, and then click the green triangle button to execute the command. go-doudou will generate an <code>enums_gen.go</code> file in the same directory as the original file. In this example, the following code will be generated:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.5.</span></span>
<span class="line"><span style="color:#6A9955;">* Don&#39;t edit!</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> vo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;encoding/json&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (k *KeyboardLayout) </span><span style="color:#DCDCAA;">StringSetter</span><span style="color:#D4D4D4;">(value </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">switch</span><span style="color:#D4D4D4;"> value {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;UNKNOWN&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = UNKNOWN</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;QWERTZ&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = QWERTZ</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;AZERTY&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = AZERTY</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;QWERTY&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = QWERTY</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = UNKNOWN</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (k *KeyboardLayout) </span><span style="color:#DCDCAA;">StringGetter</span><span style="color:#D4D4D4;">() </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">switch</span><span style="color:#D4D4D4;"> *k {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> UNKNOWN:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;UNKNOWN&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> QWERTZ:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;QWERTZ&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> AZERTY:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;AZERTY&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> QWERTY:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;QWERTY&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;UNKNOWN&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (k *KeyboardLayout) </span><span style="color:#DCDCAA;">UnmarshalJSON</span><span style="color:#D4D4D4;">(bytes []</span><span style="color:#4EC9B0;">byte</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">_k</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := json.</span><span style="color:#DCDCAA;">Unmarshal</span><span style="color:#D4D4D4;">(bytes, &amp;_k)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> err</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	k.</span><span style="color:#DCDCAA;">StringSetter</span><span style="color:#D4D4D4;">(_k)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">nil</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (k *KeyboardLayout) </span><span style="color:#DCDCAA;">MarshalJSON</span><span style="color:#D4D4D4;">() ([]</span><span style="color:#4EC9B0;">byte</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> json.</span><span style="color:#DCDCAA;">Marshal</span><span style="color:#D4D4D4;">(k.</span><span style="color:#DCDCAA;">StringGetter</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="_5-new-feature-pathvariable-dynamic-route-support" tabindex="-1"><a class="header-anchor" href="#_5-new-feature-pathvariable-dynamic-route-support" aria-hidden="true">#</a> 5. New Feature: PathVariable Dynamic Route Support</h2><p>Previous versions did not support PathVariable dynamic routes because query strings could completely replace them in actual development. However, to implement feature 2, this feature was added.</p><p>This feature is mainly used when defining service interfaces. You can tell go-doudou which part of the interface method signature needs to be used as a PathVariable to generate routes through an underscore <code>_</code> followed by uppercase English letters. Let&#39;s understand with an example. <img src="`+g+'" alt="Figure 9"> As shown in line 21 of the code, the method name <code>GetShelves_ShelfBooks_Book</code> will generate the interface route <code>/shelves/:shelf/books/:book</code>, containing two parameters: <code>shelf</code> and <code>book</code>. Note: These two parameters must be passed in the method signature, the order doesn&#39;t matter, and they can only be all lowercase English letters. In the generated <code>transport/httpsrv/handler.go</code> file, you can see the following code. <img src="'+C+'" alt="Figure 10"></p><h2 id="_6-new-feature-generate-go-language-http-request-client-code-from-swagger2" tabindex="-1"><a class="header-anchor" href="#_6-new-feature-generate-go-language-http-request-client-code-from-swagger2" aria-hidden="true">#</a> 6. New Feature: Generate Go Language HTTP Request Client Code from Swagger2</h2>',15),W=s("go-doudou internally calls the "),M={href:"https://github.com/getkin/kin-openapi",target:"_blank",rel:"noopener noreferrer"},z=s("https://github.com/getkin/kin-openapi"),H=s(" library to handle Swagger2 to Swagger3 conversion."),K=o('<h2 id="_7-new-feature-service-definition-support-for-decimal-decimal-type" tabindex="-1"><a class="header-anchor" href="#_7-new-feature-service-definition-support-for-decimal-decimal-type" aria-hidden="true">#</a> 7. New Feature: Service Definition Support for decimal.Decimal Type</h2><p>This feature is particularly useful for developing transaction or e-commerce type projects. <img src="'+E+'" alt="Figure 11"> As shown in the figure above, you can define <code>decimal.Decimal</code> type parameters in the service interface definition. The parsing of this type of parameter will be automatically handled in the generated <code>transport/httpsrv/handlerimpl.go</code> file. <img src="'+f+'" alt="Figure 12"> The core is calling the <code>ToDecimalE</code> method of the cast package.</p><p>In the generated Swagger file, <code>decimal.Decimal</code> parameters or properties are treated as string types, meaning that for front-end colleagues, they are just strings. <img src="'+_+`" alt="Figure 13"> Example representation of the <code>DecimalWrapper</code> struct in Swagger:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DecimalWrapper</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Data decimal.Decimal </span><span style="color:#CE9178;">\`json:&quot;data&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+v+'" alt="Figure 14"></p><h1 id="go-doudou-microservice-framework" tabindex="-1"><a class="header-anchor" href="#go-doudou-microservice-framework" aria-hidden="true">#</a> go-doudou Microservice Framework</h1><h2 id="_8-new-feature-server-automatic-gzip-decompression-for-http-request-body" tabindex="-1"><a class="header-anchor" href="#_8-new-feature-server-automatic-gzip-decompression-for-http-request-body" aria-hidden="true">#</a> 8. New Feature: Server Automatic Gzip Decompression for HTTP Request Body</h2><p>A <code>gzipBody</code> middleware has been added to the <code>framework/rest/middleware.go</code> file in the go-doudou code repository and has been added to the middleware call chain by default, transparent to developers, and ready to use out of the box. This middleware is only effective for requests with <code>Content-Encoding</code> equal to <code>gzip</code> in the HTTP request header. <img src="'+w+'" alt="Figure 15"></p><h2 id="_9-new-feature-custom-global-panichandler" tabindex="-1"><a class="header-anchor" href="#_9-new-feature-custom-global-panichandler" aria-hidden="true">#</a> 9. New Feature: Custom Global PanicHandler</h2>',9),Y=s("The go-doudou framework has added a recovery middleware by default, used to recover the program from panic, transparent to developers, and ready to use out of the box. However, to facilitate custom panic handling, this feature was added. The usage method is shown in the figure below: "),Q=n("img",{src:T,alt:"Figure 16"},null,-1),Z=s(" Just replace the previous version's "),J=n("code",null,"rest.NewRestServer()",-1),X=s(" with "),$=n("code",null,"rest.NewRestServerWithOptions",-1),ss=s(" and pass in the "),ns={href:"https://golang.cafe/blog/golang-functional-options-pattern.html",target:"_blank",rel:"noopener noreferrer"},as=s("Functional Options function"),es=s(),os=n("code",null,"rest.WithPanicHandler",-1),ls=s(".");function ps(ts,rs){const a=l("ExternalLinkIcon");return p(),t(r,null,[A,n("p",null,[N,n("a",F,[I,e(a)]),G,n("a",S,[x,e(a)]),P]),q,n("ul",null,[B,n("li",null,[O,R,n("a",V,[j,e(a)]),L])]),U,n("p",null,[W,n("a",M,[z,e(a)]),H]),K,n("p",null,[Y,Q,Z,J,X,$,ss,n("a",ns,[as,e(a)]),es,os,ls])],64)}var Ds=c(k,[["render",ps]]);export{Ds as default};
