import{r as p,o as e,a as o,b as s,e as t,F as r,g as n,f as a}from"./app.2025f35b.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var D="/assets/run.c10eb4d1.png";const i={},y=n(`<h1 id="how-to-use-annotations-in-go-doudou-applications" tabindex="-1"><a class="header-anchor" href="#how-to-use-annotations-in-go-doudou-applications" aria-hidden="true">#</a> How to Use Annotations in go-doudou Applications</h1><p>We all know that Go language doesn&#39;t have native annotations, but when developing business applications, the lack of annotations can make front-end and back-end coordination difficult. go-doudou has implemented support for annotations through Go&#39;s standard library <code>ast/parser</code>.</p><h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><p>We&#39;ll demonstrate the usage and effects through a simple service developed with go-doudou.</p><h3 id="preparation" tabindex="-1"><a class="header-anchor" href="#preparation" aria-hidden="true">#</a> Preparation</h3><ul><li>Install the latest version of go-doudou CLI locally</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">go</span><span style="color:#D4D4D4;"> install -v github.com/unionj-cloud/</span><span style="color:#C586C0;">go</span><span style="color:#D4D4D4;">-doudou/v2@v2.</span><span style="color:#B5CEA8;">0.8</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,7),u=a("Install Postman locally for testing APIs: "),b={href:"https://www.postman.com/",target:"_blank",rel:"noopener noreferrer"},m=a("https://www.postman.com/"),C=s("li",null,[s("p",null,"Install GoLand locally")],-1),d=n(`<h3 id="initialize-the-project" tabindex="-1"><a class="header-anchor" href="#initialize-the-project" aria-hidden="true">#</a> Initialize the Project</h3><p>Our service name and module name are both called <code>annotation</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc init annotation</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="design-business-interface" tabindex="-1"><a class="header-anchor" href="#design-business-interface" aria-hidden="true">#</a> Design Business Interface</h3><p>The interface definition file for go-doudou applications is the <code>svc.go</code> file in the project root path. Open the file and modify it as follows:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> service</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;context&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//go:generate go-doudou svc http --handler --doc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Annotation</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// This interface is publicly accessible, no login or permission validation needed</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetGuest</span><span style="color:#D4D4D4;">(ctx context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// This interface is only accessible to logged-in users</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// @role(USER,ADMIN)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetUser</span><span style="color:#D4D4D4;">(ctx context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// This interface is only accessible to administrators</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// @role(ADMIN)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetAdmin</span><span style="color:#D4D4D4;">(ctx context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>@role(USER,ADMIN)</code> and <code>@role(ADMIN)</code> are the focus of this article. The annotation definition format is: <code>@annotationName(param1,param2,param3...)</code>. You can customize various annotations according to your business requirements. <code>@role</code> is just an example; you can also define others like <code>@permission(create,update,del)</code>, and parameter-less annotations like <code>@inner()</code>.</p><h3 id="generate-code" tabindex="-1"><a class="header-anchor" href="#generate-code" aria-hidden="true">#</a> Generate Code</h3><p>Click the green triangle in the upper left corner of the screenshot to execute the <code>go:generate</code> instruction, which will generate interface routes and HTTP handler related code, as well as JSON documentation following the OpenAPI 3.0 specification.</p><p><img src="`+D+`" alt="run"></p><p>Let&#39;s focus on the <code>transport/httpsrv/handler.go</code> file.</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.8.</span></span>
<span class="line"><span style="color:#6A9955;">* Don&#39;t edit!</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> httpsrv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;net/http&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework/rest&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AnnotationHandler</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetGuest</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetUser</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">GetAdmin</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Routes</span><span style="color:#D4D4D4;">(handler AnnotationHandler) []rest.Route {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> []rest.Route{</span></span>
<span class="line"><span style="color:#D4D4D4;">		{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name:        </span><span style="color:#CE9178;">&quot;GetGuest&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Method:      </span><span style="color:#CE9178;">&quot;GET&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pattern:     </span><span style="color:#CE9178;">&quot;/guest&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			HandlerFunc: handler.GetGuest,</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">		{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name:        </span><span style="color:#CE9178;">&quot;GetUser&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Method:      </span><span style="color:#CE9178;">&quot;GET&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pattern:     </span><span style="color:#CE9178;">&quot;/user&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			HandlerFunc: handler.GetUser,</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">		{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name:        </span><span style="color:#CE9178;">&quot;GetAdmin&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Method:      </span><span style="color:#CE9178;">&quot;GET&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pattern:     </span><span style="color:#CE9178;">&quot;/admin&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			HandlerFunc: handler.GetAdmin,</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Store the parsed annotation information in memory</span></span>
<span class="line"><span style="color:#6A9955;">// framework.AnnotationStore is an alias for map[string][]Annotation type,</span></span>
<span class="line"><span style="color:#6A9955;">// where the key is the route name, and the value is a slice of annotation structures.</span></span>
<span class="line"><span style="color:#6A9955;">// The annotation structure stores the annotation name and parameter slice.</span></span>
<span class="line"><span style="color:#6A9955;">// The principle of the permission validation middleware we implement below is to get the route name from the http.Request object,</span></span>
<span class="line"><span style="color:#6A9955;">// then use the route name to find the stored annotation structure slice from RouteAnnotationStore,</span></span>
<span class="line"><span style="color:#6A9955;">// and finally compare the user roles obtained from the in-memory data source or external data source</span></span>
<span class="line"><span style="color:#6A9955;">// with the elements in the parameter slice of the annotation structure</span></span>
<span class="line"><span style="color:#6A9955;">// to determine whether the user has permission to continue accessing the interface</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">RouteAnnotationStore</span><span style="color:#D4D4D4;"> = framework.AnnotationStore{</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;GetUser&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">		{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name: </span><span style="color:#CE9178;">&quot;@role&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Params: []</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#CE9178;">&quot;USER&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#CE9178;">&quot;ADMIN&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			},</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">	},</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;GetAdmin&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">		{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name: </span><span style="color:#CE9178;">&quot;@role&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Params: []</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#CE9178;">&quot;ADMIN&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			},</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">	},</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><h3 id="download-dependencies" tabindex="-1"><a class="header-anchor" href="#download-dependencies" aria-hidden="true">#</a> Download Dependencies</h3><p>Execute the <code>go mod tidy</code> command to download project dependencies. At this point, the service can be started, but let&#39;s not rush. Next, we&#39;ll write middleware based on the annotation information to implement our requirement to control access permissions based on user roles.</p><h3 id="auth-middleware" tabindex="-1"><a class="header-anchor" href="#auth-middleware" aria-hidden="true">#</a> Auth Middleware</h3><p>The login credential for this sample project uses a base64 token for HTTP basic authentication. Let&#39;s open the <code>transport/httpsrv/middleware.go</code> file and paste the following code:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.8.</span></span>
<span class="line"><span style="color:#6A9955;">* You can edit it as your need.</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> httpsrv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/vo&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework/rest/httprouter&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/toolkit/sliceutils&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;net/http&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// vo.UserStore is an alias type for map[Auth]RoleEnum, where the key is a structure composed of username and password, and the value is a role enumeration</span></span>
<span class="line"><span style="color:#6A9955;">// We use userStore to represent the database</span></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Auth</span><span style="color:#D4D4D4;">(userStore vo.UserStore) </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(inner http.Handler) http.Handler {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(inner http.Handler) http.Handler {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> http.</span><span style="color:#DCDCAA;">HandlerFunc</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request) {</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// Get the route name from http.Request</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">paramsFromCtx</span><span style="color:#D4D4D4;"> := httprouter.</span><span style="color:#DCDCAA;">ParamsFromContext</span><span style="color:#D4D4D4;">(r.</span><span style="color:#DCDCAA;">Context</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">routeName</span><span style="color:#D4D4D4;"> := paramsFromCtx.</span><span style="color:#DCDCAA;">MatchedRouteName</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// Check if the route has associated annotation structure slices</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If not, allow the request to proceed</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> !RouteAnnotationStore.</span><span style="color:#DCDCAA;">HasAnnotation</span><span style="color:#D4D4D4;">(routeName, </span><span style="color:#CE9178;">&quot;@role&quot;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">				inner.</span><span style="color:#DCDCAA;">ServeHTTP</span><span style="color:#D4D4D4;">(w, r)</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// Extract and parse HTTP basic username and password from the request header</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">pass</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ok</span><span style="color:#D4D4D4;"> := r.</span><span style="color:#DCDCAA;">BasicAuth</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If not successful, deny access, return 401</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> !ok {</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">Header</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Set</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;WWW-Authenticate&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">\`Basic realm=&quot;Provide user name and password&quot;\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">WriteHeader</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">401</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">Write</span><span style="color:#D4D4D4;">([]</span><span style="color:#DCDCAA;">byte</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Unauthorised.</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">			}</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// Check if this user exists in userStore</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">role</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">exists</span><span style="color:#D4D4D4;"> := userStore[vo.Auth{user, pass}]</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If it doesn&#39;t exist, deny access, return 401</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> !exists {</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">Header</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Set</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;WWW-Authenticate&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">\`Basic realm=&quot;Provide user name and password&quot;\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">WriteHeader</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">401</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">Write</span><span style="color:#D4D4D4;">([]</span><span style="color:#DCDCAA;">byte</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Unauthorised.</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">			}</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If it exists, check if the interface allows access to users of that role</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;"> := RouteAnnotationStore.</span><span style="color:#DCDCAA;">GetParams</span><span style="color:#D4D4D4;">(routeName, </span><span style="color:#CE9178;">&quot;@role&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// Check if the parameter slice of the @role annotation for this route includes the user&#39;s role</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If not, deny access, return 403</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> !sliceutils.</span><span style="color:#DCDCAA;">StringContains</span><span style="color:#D4D4D4;">(params, role.</span><span style="color:#DCDCAA;">StringGetter</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">WriteHeader</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">403</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">				w.</span><span style="color:#DCDCAA;">Write</span><span style="color:#D4D4D4;">([]</span><span style="color:#DCDCAA;">byte</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Access denied</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">			}</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// If it includes the user&#39;s role, allow access</span></span>
<span class="line"><span style="color:#D4D4D4;">			inner.</span><span style="color:#DCDCAA;">ServeHTTP</span><span style="color:#D4D4D4;">(w, r)</span></span>
<span class="line"><span style="color:#D4D4D4;">		})</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><h3 id="define-enums" tabindex="-1"><a class="header-anchor" href="#define-enums" aria-hidden="true">#</a> Define Enums</h3><p>Next, we need to define an enumeration for roles. Create a <code>vo</code> directory in the project root directory, and create a new <code>vo.go</code> file inside, pasting the following code:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> vo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Auth</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	User  </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">	Pass  </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// RoleEnum is a type alias for int</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">RoleEnum</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Define enum constants</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	GUEST </span><span style="color:#9CDCFE;">RoleEnum</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">iota</span></span>
<span class="line"><span style="color:#D4D4D4;">	USER</span></span>
<span class="line"><span style="color:#D4D4D4;">	ADMIN</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// StringSetter conversion from string to enum constants</span></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (r *RoleEnum) </span><span style="color:#DCDCAA;">StringSetter</span><span style="color:#D4D4D4;">(value </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">switch</span><span style="color:#D4D4D4;"> value {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GUEST&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;"> = GUEST</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;USER&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;"> = USER</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;ADMIN&quot;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;"> = ADMIN</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		*</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;"> = GUEST</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// StringGetter conversion from enum constants to string</span></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (r *RoleEnum) </span><span style="color:#DCDCAA;">StringGetter</span><span style="color:#D4D4D4;">() </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">switch</span><span style="color:#D4D4D4;"> *r {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> GUEST:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GUEST&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> USER:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;USER&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">case</span><span style="color:#D4D4D4;"> ADMIN:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;ADMIN&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GUEST&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// UserStore is an alias type for map[Auth]RoleEnum, simulating a database</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UserStore</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">map</span><span style="color:#D4D4D4;">[Auth]RoleEnum</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Define some users</span></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">NewUserStore</span><span style="color:#D4D4D4;">() UserStore {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> UserStore{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Auth{</span></span>
<span class="line"><span style="color:#D4D4D4;">			User: </span><span style="color:#CE9178;">&quot;admin&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pass: </span><span style="color:#CE9178;">&quot;admin&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		}: ADMIN,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Auth{</span></span>
<span class="line"><span style="color:#D4D4D4;">			User: </span><span style="color:#CE9178;">&quot;usr1&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pass: </span><span style="color:#CE9178;">&quot;usr1&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		}: USER,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Auth{</span></span>
<span class="line"><span style="color:#D4D4D4;">			User: </span><span style="color:#CE9178;">&quot;usr2&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pass: </span><span style="color:#CE9178;">&quot;usr2&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		}: USER,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h3 id="implement-the-interface" tabindex="-1"><a class="header-anchor" href="#implement-the-interface" aria-hidden="true">#</a> Implement the Interface</h3><p>Open the <code>transport/httpsrv/annotationhandlerimpl.go</code> file, pasting the following code:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.8.</span></span>
<span class="line"><span style="color:#6A9955;">* You can edit it as your need.</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> httpsrv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/service&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework/rest&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;net/http&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AnnotationHandlerImpl</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	service.Annotation</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationHandlerImpl) </span><span style="color:#DCDCAA;">GetGuest</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := receiver.Annotation.</span><span style="color:#DCDCAA;">GetGuest</span><span style="color:#D4D4D4;">(r.</span><span style="color:#DCDCAA;">Context</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		rest.</span><span style="color:#DCDCAA;">ErrorResp</span><span style="color:#D4D4D4;">(w, r, err)</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	rest.</span><span style="color:#DCDCAA;">SuccessResp</span><span style="color:#D4D4D4;">(w, r, result)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationHandlerImpl) </span><span style="color:#DCDCAA;">GetUser</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := receiver.Annotation.</span><span style="color:#DCDCAA;">GetUser</span><span style="color:#D4D4D4;">(r.</span><span style="color:#DCDCAA;">Context</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		rest.</span><span style="color:#DCDCAA;">ErrorResp</span><span style="color:#D4D4D4;">(w, r, err)</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	rest.</span><span style="color:#DCDCAA;">SuccessResp</span><span style="color:#D4D4D4;">(w, r, result)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationHandlerImpl) </span><span style="color:#DCDCAA;">GetAdmin</span><span style="color:#D4D4D4;">(w http.ResponseWriter, r *http.Request) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := receiver.Annotation.</span><span style="color:#DCDCAA;">GetAdmin</span><span style="color:#D4D4D4;">(r.</span><span style="color:#DCDCAA;">Context</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		rest.</span><span style="color:#DCDCAA;">ErrorResp</span><span style="color:#D4D4D4;">(w, r, err)</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	rest.</span><span style="color:#DCDCAA;">SuccessResp</span><span style="color:#D4D4D4;">(w, r, result)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">NewAnnotationHandler</span><span style="color:#D4D4D4;">(annotation service.Annotation) AnnotationHandler {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> &amp;AnnotationHandlerImpl{</span></span>
<span class="line"><span style="color:#D4D4D4;">		annotation,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>Open the <code>svcimpl/svcimpl.go</code> file, pasting the following code:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.8.</span></span>
<span class="line"><span style="color:#6A9955;">* You can edit it as your need.</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> svcimpl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/service&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;context&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AnnotationImpl</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationImpl) </span><span style="color:#DCDCAA;">GetGuest</span><span style="color:#D4D4D4;">(_ context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GetGuest from service layer&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">nil</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationImpl) </span><span style="color:#DCDCAA;">GetUser</span><span style="color:#D4D4D4;">(_ context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GetUser from service layer&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">nil</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *AnnotationImpl) </span><span style="color:#DCDCAA;">GetAdmin</span><span style="color:#D4D4D4;">(_ context.Context) (data </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;GetAdmin from service layer&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">nil</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">NewAnnotation</span><span style="color:#D4D4D4;">() service.Annotation {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> &amp;AnnotationImpl{}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>Finally, open the <code>cmd/main.go</code> file, pasting the following code:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;">* Generated by go-doudou v2.0.8.</span></span>
<span class="line"><span style="color:#6A9955;">* You can edit it as your need.</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/svcimpl&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/transport/httpsrv&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;annotation/vo&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;context&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework/configutils&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	v3 </span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/framework/rest&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/v2/toolkit/zlogger&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;os&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;os/signal&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;syscall&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">&quot;time&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">defer</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">recover</span><span style="color:#D4D4D4;">(); err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			zlogger.</span><span style="color:#DCDCAA;">Error</span><span style="color:#D4D4D4;">(err)</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">	}()</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">conf</span><span style="color:#D4D4D4;">   v3.HttpServerConfig</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">server</span><span style="color:#D4D4D4;"> *v3.HttpServer</span></span>
<span class="line"><span style="color:#D4D4D4;">	)</span></span>
<span class="line"><span style="color:#D4D4D4;">	configutils.</span><span style="color:#DCDCAA;">SetConfigName</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;config&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">conf</span><span style="color:#D4D4D4;"> = v3.HttpServerConfig{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Host:                                   configutils.</span><span style="color:#DCDCAA;">GetString</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_HOST&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;localhost&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		Port:                                   configutils.</span><span style="color:#DCDCAA;">GetInt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_PORT&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">6060</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		Mode:                                   configutils.</span><span style="color:#DCDCAA;">GetString</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_MODE&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;release&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		PayloadCodec:                           configutils.</span><span style="color:#DCDCAA;">GetString</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_PAYLOAD_CODEC&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;json&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		ReadTimeout:                            configutils.</span><span style="color:#DCDCAA;">GetInt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_READ_TIMEOUT&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		WriteTimeout:                           configutils.</span><span style="color:#DCDCAA;">GetInt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_WRITE_TIMEOUT&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		IdleTimeout:                            configutils.</span><span style="color:#DCDCAA;">GetInt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_IDLE_TIMEOUT&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">90</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		MaxRequestBodySize:                     configutils.</span><span style="color:#DCDCAA;">GetInt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_MAX_REQUEST_BODY_SIZE&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		LoggerOptions:                          </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		SwaggerOptions:                         </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		RouteNotFoundHandler:                   </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		DebugErrorStackOptions:                 </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		SetAuthOptions:                         </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		HealthyCheckOptions:                    </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		PageOptions:                            </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		CriteriaOptions:                        </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		SortOptions:                            </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		ReqLoggerOptions:                       </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		PrintRoutesOptions:                     </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		SerRespOkStatusCodeAs:                  </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		SerRespFailStatusCodeAs:                </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		EnableCors:                             configutils.</span><span style="color:#DCDCAA;">GetBool</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_ENABLE_CORS&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		TlsCertFile:                            configutils.</span><span style="color:#DCDCAA;">GetString</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_TLS_CERT_FILE&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		TlsKeyFile:                             configutils.</span><span style="color:#DCDCAA;">GetString</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_TLS_KEY_FILE&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		InsecureSkipVerify:                     configutils.</span><span style="color:#DCDCAA;">GetBool</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_INSECURE_SKIP_VERIFY&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		DisableGlobalWsCors:                    configutils.</span><span style="color:#DCDCAA;">GetBool</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GDD_DISABLE_GLOBAL_WS_CORS&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">		RequestMatcher:                         </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">service</span><span style="color:#D4D4D4;"> := svcimpl.</span><span style="color:#DCDCAA;">NewAnnotation</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;"> := httpsrv.</span><span style="color:#DCDCAA;">NewAnnotationHandler</span><span style="color:#D4D4D4;">(service)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">server</span><span style="color:#D4D4D4;"> = v3.</span><span style="color:#DCDCAA;">NewHttpServer</span><span style="color:#D4D4D4;">(conf)</span></span>
<span class="line"><span style="color:#D4D4D4;">	server.</span><span style="color:#DCDCAA;">AddMiddleware</span><span style="color:#D4D4D4;">(httpsrv.</span><span style="color:#DCDCAA;">Auth</span><span style="color:#D4D4D4;">(vo.</span><span style="color:#DCDCAA;">NewUserStore</span><span style="color:#D4D4D4;">()))</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">routes</span><span style="color:#D4D4D4;"> := httpsrv.</span><span style="color:#DCDCAA;">Routes</span><span style="color:#D4D4D4;">(handler)</span></span>
<span class="line"><span style="color:#D4D4D4;">	server.</span><span style="color:#DCDCAA;">AddRoutes</span><span style="color:#D4D4D4;">(routes)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">go</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := server.</span><span style="color:#DCDCAA;">Run</span><span style="color:#D4D4D4;">(); err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			zlogger.</span><span style="color:#DCDCAA;">Error</span><span style="color:#D4D4D4;">(err)</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">	}()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">quit</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">chan</span><span style="color:#D4D4D4;"> os.Signal, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	signal.</span><span style="color:#DCDCAA;">Notify</span><span style="color:#D4D4D4;">(quit, syscall.SIGINT, syscall.SIGTERM)</span></span>
<span class="line"><span style="color:#D4D4D4;">	&lt;-quit</span></span>
<span class="line"><span style="color:#D4D4D4;">	zlogger.</span><span style="color:#DCDCAA;">Info</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Shutdown Server ...&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">cancel</span><span style="color:#D4D4D4;"> := context.</span><span style="color:#DCDCAA;">WithTimeout</span><span style="color:#D4D4D4;">(context.</span><span style="color:#DCDCAA;">Background</span><span style="color:#D4D4D4;">(), </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">*time.Second)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">defer</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">cancel</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := server.</span><span style="color:#DCDCAA;">Shutdown</span><span style="color:#D4D4D4;">(ctx); err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		zlogger.</span><span style="color:#DCDCAA;">Error</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Server Shutdown:&quot;</span><span style="color:#D4D4D4;">, err)</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	zlogger.</span><span style="color:#DCDCAA;">Info</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Server exiting&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><h3 id="start-the-service" tabindex="-1"><a class="header-anchor" href="#start-the-service" aria-hidden="true">#</a> Start the Service</h3><p>Execute the <code>go run cmd/main.go</code> command to start the service.</p><h3 id="test-with-postman" tabindex="-1"><a class="header-anchor" href="#test-with-postman" aria-hidden="true">#</a> Test with Postman</h3><ol><li><p>First test the <code>/guest</code> endpoint:</p><ul><li>Create a new request in Postman, set the method to <code>GET</code></li><li>Set the URL to <code>http://localhost:6060/guest</code></li><li>Send the request, you should receive a response with data: &quot;GetGuest from service layer&quot;</li></ul></li><li><p>Then test the <code>/user</code> endpoint:</p><ul><li>Create a new request in Postman, set the method to <code>GET</code></li><li>Set the URL to <code>http://localhost:6060/user</code></li><li>In the &quot;Auth&quot; tab, select &quot;Basic Auth&quot;</li><li>Enter username: <code>usr1</code>, password: <code>usr1</code></li><li>Send the request, you should receive a response with data: &quot;GetUser from service layer&quot;</li></ul></li><li><p>Finally test the <code>/admin</code> endpoint:</p><ul><li>Create a new request in Postman, set the method to <code>GET</code></li><li>Set the URL to <code>http://localhost:6060/admin</code></li><li>In the &quot;Auth&quot; tab, select &quot;Basic Auth&quot;</li><li>Enter username: <code>admin</code>, password: <code>admin</code></li><li>Send the request, you should receive a response with data: &quot;GetAdmin from service layer&quot;</li></ul></li><li><p>Try to test the <code>/admin</code> endpoint with a user role account:</p><ul><li>Create a new request in Postman, set the method to <code>GET</code></li><li>Set the URL to <code>http://localhost:6060/admin</code></li><li>In the &quot;Auth&quot; tab, select &quot;Basic Auth&quot;</li><li>Enter username: <code>usr1</code>, password: <code>usr1</code></li><li>Send the request, you should receive a 403 forbidden response with the message: &quot;Access denied&quot;</li></ul></li></ol><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion" aria-hidden="true">#</a> Conclusion</h2><p>Through this example, we&#39;ve demonstrated how to use annotations in go-doudou applications to implement role-based access control. The key points are:</p><ol><li>Define the annotation in the comments of interface methods in the <code>svc.go</code> file</li><li>The annotation will be parsed and stored in the <code>RouteAnnotationStore</code> by go-doudou&#39;s code generator</li><li>Implement a middleware that uses the annotation to perform the necessary logic, in this case, checking if the user has the required role to access a specific API</li><li>Apply the middleware in the main function</li></ol><p>The same approach can be used for other custom annotations that suit your business needs.</p>`,35);function h(A,E){const l=p("ExternalLinkIcon");return e(),o(r,null,[y,s("ul",null,[s("li",null,[s("p",null,[u,s("a",b,[m,t(l)])])]),C]),d],64)}var f=c(i,[["render",h]]);export{f as default};
