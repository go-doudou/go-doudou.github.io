import{r as p,o,a as r,b as s,e as l,F as t,f as e,g as n}from"./app.04f9bf74.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const D={},i=e(`<h1 id="cli" tabindex="-1"><a class="header-anchor" href="#cli" aria-hidden="true">#</a> CLI</h1><p>Go-doudou has built-in code generation CLI. <code>go-doudou</code> is the root command and there are two flags for it.</p><ul><li><code>-v</code> can tell you current installed version of go-doudou.</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou.github.io git:(dev) \u2717 go-doudou -v     </span></span>
<span class="line"><span style="color:#D4D4D4;">go-doudou version v1.0.3</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>-h</code> can print help message. As all subcommands have this flag, I will omit it in the following documentation.</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou.github.io git:(dev) \u2717 go-doudou -h</span></span>
<span class="line"><span style="color:#D4D4D4;">go-doudou works like a scaffolding tool but more than that. </span></span>
<span class="line"><span style="color:#D4D4D4;">it lets api providers design their apis and </span><span style="color:#DCDCAA;">help</span><span style="color:#D4D4D4;"> them code less. </span></span>
<span class="line"><span style="color:#D4D4D4;">it generates openapi 3.0 spec json document </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> frontend developers or other api consumers to understand what apis there, </span></span>
<span class="line"><span style="color:#D4D4D4;">consumers can import it into postman to debug and test, or upload it into some code generators to download client sdk.</span></span>
<span class="line"><span style="color:#D4D4D4;">it provides some useful components and middleware </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> constructing microservice cluster like service register and discovering, </span></span>
<span class="line"><span style="color:#D4D4D4;">load balancing and so on. it just begins, more features will come out soon.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Usage:</span></span>
<span class="line"><span style="color:#D4D4D4;">  go-doudou [flags]</span></span>
<span class="line"><span style="color:#D4D4D4;">  go-doudou [command]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Available Commands:</span></span>
<span class="line"><span style="color:#D4D4D4;">  ddl         migration tool between database table structure and golang struct</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">help</span><span style="color:#D4D4D4;">        Help about any </span><span style="color:#DCDCAA;">command</span></span>
<span class="line"><span style="color:#D4D4D4;">  name        bulk add or update json tag of struct fields</span></span>
<span class="line"><span style="color:#D4D4D4;">  svc         generate or update service</span></span>
<span class="line"><span style="color:#D4D4D4;">  version     Print the version number of go-doudou</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Flags:</span></span>
<span class="line"><span style="color:#D4D4D4;">  -h, --help      </span><span style="color:#DCDCAA;">help</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> go-doudou</span></span>
<span class="line"><span style="color:#D4D4D4;">  -v, --version   version </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> go-doudou</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Use </span><span style="color:#CE9178;">&quot;go-doudou [command] --help&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> more information about a command.</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>And there are several useful subcommands helping you speed up your production. Let&#39;s get into them one by one.</p><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h2><p><code>go-doudou version</code> command is mainly used for upgrade <code>go-doudou</code>. It tells you not only current installed version, but also the latest release version, and asks you if you want to upgrade.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou.github.io git:(dev) \u2717 go-doudou version</span></span>
<span class="line"><span style="color:#D4D4D4;">Installed version is v0.9.8</span></span>
<span class="line"><span style="color:#D4D4D4;">Latest release version is v1.0.3</span></span>
<span class="line"><span style="color:#D4D4D4;">Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190 </span></span>
<span class="line"><span style="color:#D4D4D4;">? Do you want to upgrade?: </span></span>
<span class="line"><span style="color:#D4D4D4;">  \u25B8 Yes</span></span>
<span class="line"><span style="color:#D4D4D4;">    No</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> help</h2><p><code>go-doudou help</code> is the same as <code>go-doudou -h</code>.</p><h2 id="svc" tabindex="-1"><a class="header-anchor" href="#svc" aria-hidden="true">#</a> svc</h2><p><code>go-doudou svc</code> is the most important and the most commonly used command.</p><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3><p><code>go-doudou svc init</code> is used for initializing go-doudou application. You can run this command in an existing directory, or you can also specify a directory immediately following <code>init</code>. Then go-doudou will create the directory if it not exists and initial files for starting the development, and also run <code>git init</code> underlyingly. If specified directory has been already existed and not empty, go-doudou will only create non-existing files and skip existing files with warning like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou-tutorials git:(master) go-doudou svc init helloworld</span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file .gitignore already exists               </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/helloworld/go.mod already exists </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/helloworld/.env already exists </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/helloworld/vo/vo.go already exists </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/helloworld/svc.go already exists </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[2022-02-17 18:14:53] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/helloworld/Dockerfile already exists </span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>There is <code>-m</code> flag for customizing module name. You can use it like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc init helloworld -m github.com/unionj-cloud/helloworld</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h3><p><code>go-doudou svc http</code> is used for generating http routes and handlers for RESTful service. For example:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc http --handler -c --doc</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h4><p>There are several flags for configuring the code generation behavior. Let me explain them one by one:</p>`,24),y=s("li",null,[s("p",null,[s("code",null,"--handler"),n(": "),s("code",null,"bool"),n(" type. If you set this flag, go-doudou will generate default http handler implementations which parse request parameters into form and decode request body into struct, and also send http response back.")])],-1),d=s("code",null,"-c",-1),u=n(" or "),b=s("code",null,"--client",-1),C=n(": "),m=s("code",null,"bool",-1),h=n(" type. It is used for generating "),g={href:"https://github.com/go-resty/resty",target:"_blank",rel:"noopener noreferrer"},A=n("go-resty"),E=n(" based http client code."),f=s("code",null,"--doc",-1),v=n(": "),q=s("code",null,"bool",-1),x=n(" type. It is used for generating "),w={href:"https://spec.openapis.org/oas/v3.0.3",target:"_blank",rel:"noopener noreferrer"},k=n("OpenAPI 3.0"),_=n(" description file in json format."),B=s("li",null,[s("p",null,[s("code",null,"-e"),n(" or "),s("code",null,"--env"),n(": "),s("code",null,"string"),n(" type. It is used for setting server url environment variable name. If you don't set it, it will be the upper case of service interface name in svc.go file. The name will used in client factory function like this:")])],-1),F=e(`<div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">NewHelloworldClient</span><span style="color:#D4D4D4;">(opts ...ddhttp.DdClientOption) *HelloworldClient {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">defaultProvider</span><span style="color:#D4D4D4;"> := ddhttp.</span><span style="color:#DCDCAA;">NewServiceProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;HELLOWORLD&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">defaultClient</span><span style="color:#D4D4D4;"> := ddhttp.</span><span style="color:#DCDCAA;">NewClient</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> svcClient</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>In line 2, the <code>HELLOWORLD</code> is the default name. As we said before, go-doudou is also supporting monolithic service. If your service client application don&#39;t want to join go-doudou cluster and use the out-of-box service discovery and client side load balancing feature, it can set <code>HELLOWORLD</code> to your service public url, and it will send requests to that url. Let&#39;s try run <code>go-doudou svc http --handler -c --doc -e godoudou_helloworld</code> to see what changes:</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">NewHelloworldClient</span><span style="color:#D4D4D4;">(opts ...ddhttp.DdClientOption) *HelloworldClient {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">defaultProvider</span><span style="color:#D4D4D4;"> := ddhttp.</span><span style="color:#DCDCAA;">NewServiceProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;godoudou_helloworld&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">defaultClient</span><span style="color:#D4D4D4;"> := ddhttp.</span><span style="color:#DCDCAA;">NewClient</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> svcClient</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><p><code>--case</code>: <code>string</code> type. As there are some anonymous structs defining http response body data structure in generated http handler code, we need this flag to let users configure json tag for fields. It accepts <code>lowerCamel</code> or <code>snake</code>, default is <code>lowerCamel</code>.</p></li><li><p><code>-o</code> or <code>--omitempty</code>: <code>bool</code> type. If you set this flag, <code>,omitempty</code> will be appended to json tag of fields of every generated anonymous struct in http handlers.</p></li><li><p><code>-r</code> or <code>--routePattern</code>: <code>int</code> type. It is used for configuring http route pattern generate strategy. If you set it to <code>0</code>, go-doudou will convert name of each service interface method from upper-camel case to snake case, then replace <code>_</code> to <code>/</code>. If you set it to <code>1</code>, go-doudou will join lower-case service interface name with each lower-case method name by <code>/</code>. Default is <code>0</code> which is also recommended. Here is an example. If there is a method named <code>PublicSignUp</code> in <code>Usersvc</code> interface, its http route will be <code>/public/sign/up</code> if you don&#39;t set this flag or set this flag to <code>0</code> explicitly. If you set this flag to <code>1</code>, its http route will be <code>/usersvc/publicsignup</code>.</p></li></ul><h4 id="subcommands" tabindex="-1"><a class="header-anchor" href="#subcommands" aria-hidden="true">#</a> Subcommands</h4><p>There is only one subcommand <code>client</code> available. It is used for generating golang http client code from OpenAPI 3.0 spec json file. There are some flags for it. Let&#39;s see an example:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc http client -o -e GRAPHHOPPER -f https://docs.graphhopper.com/openapi.json --pkg graphhopper</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p><code>-e</code> or <code>--env</code>: <code>string</code> type. It is used for setting server url environment variable name.</p></li><li><p><code>-f</code> or <code>--file</code>: <code>string</code> type. It is used for setting OpenAPI 3.0 spec json file path or download link.</p></li><li><p><code>-o</code> or <code>--omit</code>: <code>bool</code> type. It is used for configuring whether to append <code>,omitempty</code> to json tag.</p></li><li><p><code>-p</code> or <code>--pkg</code>: <code>string</code> type. It is used for setting client package name. Default is <code>client</code>.</p></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>There must be <code>200</code> response in <code>responses</code> object for each api, otherwise client code will not be generated and you will see an error message from command line output for corresponding api like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou-tutorials git:(master) \u2717 go-doudou svc http client -o -e PETSTORE -f https://petstore3.swagger.io/api/v3/openapi.json --pkg petstore</span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:08] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Get /user/logout </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:08] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Put /user/{username} </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:08] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Delete /user/{username} </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:08] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Post /user </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:09] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Post /pet/{petId} </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:09] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Delete /pet/{petId} </span></span>
<span class="line"><span style="color:#D4D4D4;">ERRO[2022-02-18 11:56:09] 200 response definition not found </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> api Delete /store/order/{orderId} </span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run" aria-hidden="true">#</a> run</h3><p><code>go-doudou svc run</code> is used for starting our service in development.</p><ul><li><code>-w</code> or <code>--watch</code>: <code>bool</code> type. It is used for enabling watch mode. Not support on windows. I made this feature, but I am not recommending you to use it as I personally prefer to start or shutdown a program through IDE manually.</li></ul><h3 id="push" tabindex="-1"><a class="header-anchor" href="#push" aria-hidden="true">#</a> push</h3><p><code>go-doudou svc push</code> is used for building docker image, pushing to your remote repository and generating k8s deployment files. It runs <code>go mod vendor</code>, <code>docker build</code>, <code>docker tag</code>, <code>docker push</code> commands sequentially. For example:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc push --pre godoudou_ -r wubin1989</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p><code>--pre</code>: <code>string</code> type. Its value will be prefixed to image name for grouping your images.</p></li><li><p><code>-r</code> or <code>--repo</code>: <code>string</code> type. Docker image will be pushed to this repository.</p></li></ul><p>After executed this command, you will get two files:</p><ul><li><code>\${service}_deployment.yaml</code>: k8s deploy file for stateless service, recommended to be used for monolith architecture services</li><li><code>\${service}_statefulset.yaml</code>: k8s deploy file for stateful service, recommended to be used for microservice architecture services</li></ul><h3 id="deploy" tabindex="-1"><a class="header-anchor" href="#deploy" aria-hidden="true">#</a> deploy</h3><p><code>go-doudou svc deploy</code> is used for deploying your service to kubernetes. It runs <code>kubectl apply -f</code> command underlyingly. For example,</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc deploy -k helloworld_deployment.yaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>-k</code> or <code>--k8sfile</code>: <code>string</code> type. It is used for specifying k8s deployment file path. Default is <code>\${service}_statefulset.yaml</code>.</li></ul><h3 id="shutdown" tabindex="-1"><a class="header-anchor" href="#shutdown" aria-hidden="true">#</a> shutdown</h3><p><code>go-doudou svc shutdown</code> is used for shutting down your service on kubernetes. It runs <code>kubectl delete -f</code> command underlyingly. For example,</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou svc shutdown -k helloworld_deployment.yaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>-k</code> or <code>--k8sfile</code>: <code>string</code> type. It is used for specifying k8s deployment file path. Default is <code>\${service}_statefulset.yaml</code>.</li></ul><h2 id="ddl" tabindex="-1"><a class="header-anchor" href="#ddl" aria-hidden="true">#</a> ddl</h2>`,27),I=n("DDL and dao layer generation subcommand based on "),N={href:"https://github.com/jmoiron/sqlx",target:"_blank",rel:"noopener noreferrer"},T=n("jmoiron/sqlx"),P=n(". Currently only support "),O=s("code",null,"mysql",-1),R=n("\u3002"),S=e(`<h3 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h3><ul><li>Create/Update table from go struct</li><li>Create/Update go struct from table</li><li>Generate dao layer code with basic crud operations</li><li>Support transaction in dao layer</li><li>Support index update</li><li>Support foreign key</li></ul><h3 id="flags-1" tabindex="-1"><a class="header-anchor" href="#flags-1" aria-hidden="true">#</a> Flags</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ~ go-doudou ddl -h</span></span>
<span class="line"><span style="color:#D4D4D4;">migration tool between database table structure and golang struct</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Usage:</span></span>
<span class="line"><span style="color:#D4D4D4;">  go-doudou ddl [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Flags:</span></span>
<span class="line"><span style="color:#D4D4D4;">  -d, --dao             If true, generate dao code.</span></span>
<span class="line"><span style="color:#D4D4D4;">      --df string       Name of dao folder. (default </span><span style="color:#CE9178;">&quot;dao&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">      --domain string   Path of domain folder. (default </span><span style="color:#CE9178;">&quot;domain&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">      --env string      Path of database connection config .env file (default </span><span style="color:#CE9178;">&quot;.env&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  -h, --help            </span><span style="color:#DCDCAA;">help</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> ddl</span></span>
<span class="line"><span style="color:#D4D4D4;">      --pre string      Table name prefix. e.g.: prefix biz_ </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> biz_product.</span></span>
<span class="line"><span style="color:#D4D4D4;">  -r, --reverse         If true, generate domain code from database. If false, update or create database tables from domain code.</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="quickstart" tabindex="-1"><a class="header-anchor" href="#quickstart" aria-hidden="true">#</a> Quickstart</h3><ul><li>Install go-doudou</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go get -v github.com/unionj-cloud/go-doudou@v1.0.3</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Clone demo repository and <code>cd ddldemo</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git clone git@github.com:unionj-cloud/go-doudou-tutorials.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Start mysql container</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker-compose -f docker-compose.yml up -d</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Update database table struct and generate dao layer code</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou ddl --dao --pre=ddl_</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(main) ls -la dao
total 56
drwxr-xr-x   6 wubin1989  staff   192  9  1 00:28 .
drwxr-xr-x  14 wubin1989  staff   448  9  1 00:28 ..
-rw-r--r--   1 wubin1989  staff   953  9  1 00:28 base.go
-rw-r--r--   1 wubin1989  staff    45  9  1 00:28 userdao.go
-rw-r--r--   1 wubin1989  staff  9125  9  1 00:28 userdaoimpl.go
-rw-r--r--   1 wubin1989  staff  5752  9  1 00:28 userdaosql.go
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>Run unit tests</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go </span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;"> -race ./... -count=1</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(master) go test -race ./... -count=1
?   	doudoudemo	[no test files]
ok  	doudoudemo/dao	0.100s
?   	doudoudemo/domain	[no test files]
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Run <code>main</code> function</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go run main.go   </span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(main) go run main.go       
INFO[2022-03-18 09:14:44] user jack&#39;s id is 8                          
INFO[2022-03-18 09:14:44] returned user jack&#39;s id is 8                 
INFO[2022-03-18 09:14:44] returned user jack&#39;s average score is 97.534 
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Delete <code>domain</code> folder, <code>dao/userdaoimpl.go</code> file and <code>dao/userdaosql.go</code> file, then run below command to generate go code from tables</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go-doudou ddl --reverse --dao --pre=ddl_</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(master) go-doudou ddl --reverse --dao --pre=ddl_
WARN[2022-03-18 09:22:50] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/ddldemo/dao/base.go already exists 
WARN[2022-03-18 09:22:50] file /Users/wubin1989/workspace/cloud/go-doudou-tutorials/ddldemo/dao/userdao.go already exists 
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>Run unit tests again</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go </span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;"> -race ./... -count=1</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(master) \u2717 go test -race ./... -count=1
?   	doudoudemo	[no test files]
ok  	doudoudemo/dao	0.092s
?   	doudoudemo/domain	[no test files]
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Run main function again</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">go run main.go   </span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You can see below output from terminal:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  ddldemo git:(master) \u2717 go run main.go              
INFO[2022-03-18 09:24:57] user jack&#39;s id is 11                         
INFO[2022-03-18 09:24:57] returned user jack&#39;s id is 11                
INFO[2022-03-18 09:24:57] returned user jack&#39;s average score is 97.534 
</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> domain</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;time&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Base</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	CreateAt *time.Time </span><span style="color:#CE9178;">\`dd:&quot;default:CURRENT_TIMESTAMP&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	UpdateAt *time.Time </span><span style="color:#CE9178;">\`dd:&quot;default:CURRENT_TIMESTAMP;extra:ON UPDATE CURRENT_TIMESTAMP&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	DeleteAt *time.Time</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> domain</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//dd:table</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Book</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  ID          </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;pk;auto&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  UserId      </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;type:int&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  PublisherId </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">	</span><span style="color:#CE9178;">\`dd:&quot;fk:ddl_publisher,id,fk_publisher,ON DELETE CASCADE ON UPDATE NO ACTION&quot;\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  Base</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> domain</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//dd:table</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Publisher</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  ID   </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;pk;auto&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  Name </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  Base</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> domain</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;time&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//dd:table</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">User</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  ID         </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`dd:&quot;pk;auto&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  Name       </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;index:name_phone_idx,2;default:&#39;jack&#39;&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  Phone      </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;index:name_phone_idx,1;default:&#39;13552053960&#39;;extra:comment &#39;\u624B\u673A\u53F7&#39;&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  Age        </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`dd:&quot;unsigned&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  No         </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`dd:&quot;type:int;unique&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  UniqueCol  </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`dd:&quot;type:int;unique:unique_col_idx,1&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  UniqueCol2 </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`dd:&quot;type:int;unique:unique_col_idx,2&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  School     </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`dd:&quot;null;default:&#39;harvard&#39;;extra:comment &#39;\u5B66\u6821&#39;&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  IsStudent  </span><span style="color:#4EC9B0;">bool</span></span>
<span class="line"><span style="color:#D4D4D4;">  ArriveAt *time.Time </span><span style="color:#CE9178;">\`dd:&quot;type:datetime;extra:comment &#39;\u5230\u8D27\u65F6\u95F4&#39;&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">  Status   </span><span style="color:#4EC9B0;">int8</span><span style="color:#D4D4D4;">       </span><span style="color:#CE9178;">\`dd:&quot;type:tinyint(4);extra:comment &#39;0\u8FDB\u884C\u4E2D</span></span>
<span class="line"><span style="color:#CE9178;">1\u5B8C\u7ED3</span></span>
<span class="line"><span style="color:#CE9178;">2\u53D6\u6D88&#39;&quot;\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  Base</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> Tags</h4><h5 id="pk" tabindex="-1"><a class="header-anchor" href="#pk" aria-hidden="true">#</a> pk</h5><p>Primary key</p><h5 id="auto" tabindex="-1"><a class="header-anchor" href="#auto" aria-hidden="true">#</a> auto</h5><p>Autoincrement</p><h5 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h5><p>Column type. Not required. If you don&#39;t set this tag explicitly, default rule is as below table</p><table><thead><tr><th style="text-align:center;">Go Type\uFF08including pointer type\uFF09</th><th style="text-align:center;">Column Type</th></tr></thead><tbody><tr><td style="text-align:center;">int, int16, int32</td><td style="text-align:center;">int</td></tr><tr><td style="text-align:center;">int64</td><td style="text-align:center;">bigint</td></tr><tr><td style="text-align:center;">float32</td><td style="text-align:center;">float</td></tr><tr><td style="text-align:center;">float64</td><td style="text-align:center;">double</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">varchar(255)</td></tr><tr><td style="text-align:center;">bool, int8</td><td style="text-align:center;">tinyint</td></tr><tr><td style="text-align:center;">time.Time</td><td style="text-align:center;">datetime</td></tr><tr><td style="text-align:center;">decimal.Decimal</td><td style="text-align:center;">decimal(6,2)</td></tr></tbody></table><h5 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h5><p>Default value. If value was database built-in function or expression made by built-in functions, not need single quote marks. If value was literal value, it should be quoted by single quote marks.</p><h5 id="extra" tabindex="-1"><a class="header-anchor" href="#extra" aria-hidden="true">#</a> extra</h5><p>Extra definition. Example: &quot;on update CURRENT_TIMESTAMP&quot;\uFF0C&quot;comment &#39;cellphone number&#39;&quot;<br><strong>Note\uFF1Adon&#39;t use ; and : in comment</strong></p><h5 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> index</h5><ul><li>Format: &quot;index:Name,Order,Sort&quot; or &quot;index&quot;</li><li><code>Name</code>: index name. string. If multiple fields use the same index name, the index will be created as composite index. Not required. Default index name is column name + _idx</li><li><code>Order</code>:int</li><li><code>Sort</code>: string. Only accept <code>asc</code> and <code>desc</code>. Not required. Default is asc</li></ul><h5 id="unique" tabindex="-1"><a class="header-anchor" href="#unique" aria-hidden="true">#</a> unique</h5><p>Unique index. Usage is the same as index.</p><h5 id="null" tabindex="-1"><a class="header-anchor" href="#null" aria-hidden="true">#</a> null</h5><p>Nullable. <strong>Note: if the field is a pointer, null is default.</strong></p><h5 id="unsigned" tabindex="-1"><a class="header-anchor" href="#unsigned" aria-hidden="true">#</a> unsigned</h5><p>Unsigned</p><h5 id="fk" tabindex="-1"><a class="header-anchor" href="#fk" aria-hidden="true">#</a> fk</h5><ul><li>Format\uFF1A&quot;fk:ReferenceTableName,ReferenceTablePrimaryKey,Constraint,Action&quot;</li><li>ReferenceTableName: reference table name</li><li>ReferenceTablePrimaryKey: reference table primary key such as <code>id</code></li><li>Constraint: foreign key constraint such as <code>fk_publisher</code></li><li>Action: for example: <code>ON DELETE CASCADE ON UPDATE NO ACTION</code></li></ul><h4 id="dao-layer-code" tabindex="-1"><a class="header-anchor" href="#dao-layer-code" aria-hidden="true">#</a> Dao layer code</h4><h5 id="single-table-crud" tabindex="-1"><a class="header-anchor" href="#single-table-crud" aria-hidden="true">#</a> Single Table CRUD</h5><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> dao</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;context&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;github.com/unionj-cloud/go-doudou/ddl/query&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Base</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">Insert</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">Upsert</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">UpsertNoneZero</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">DeleteMany</span><span style="color:#D4D4D4;">(ctx context.Context, where query.Q) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">Update</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">UpdateNoneZero</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">UpdateMany</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}, where query.Q) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">UpdateManyNoneZero</span><span style="color:#D4D4D4;">(ctx context.Context, data </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}, where query.Q) (</span><span style="color:#4EC9B0;">int64</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">Get</span><span style="color:#D4D4D4;">(ctx context.Context, id </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}) (</span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">SelectMany</span><span style="color:#D4D4D4;">(ctx context.Context, where ...query.Q) (</span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;">{}, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">CountMany</span><span style="color:#D4D4D4;">(ctx context.Context, where ...query.Q) (</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">PageMany</span><span style="color:#D4D4D4;">(ctx context.Context, page query.Page, where ...query.Q) (query.PageRet, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h5 id="transaction" tabindex="-1"><a class="header-anchor" href="#transaction" aria-hidden="true">#</a> Transaction</h5><p>Example\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver *StockImpl) </span><span style="color:#DCDCAA;">processExcel</span><span style="color:#D4D4D4;">(ctx context.Context, f multipart.File, sheet </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) (err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">types</span><span style="color:#D4D4D4;"> := []</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&quot;food&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;tool&quot;</span><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">xlsx</span><span style="color:#D4D4D4;"> *excelize.File</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;"> [][]</span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">tx</span><span style="color:#D4D4D4;">   ddl.Tx</span></span>
<span class="line"><span style="color:#D4D4D4;">	)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">xlsx</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = excelize.</span><span style="color:#DCDCAA;">OpenReader</span><span style="color:#D4D4D4;">(f)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(err, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = xlsx.</span><span style="color:#DCDCAA;">GetRows</span><span style="color:#D4D4D4;">(sheet)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(err, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">colNum</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(rows[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">rows</span><span style="color:#D4D4D4;"> = rows[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">:]</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">gdddb</span><span style="color:#D4D4D4;"> := wrapper.GddDB{receiver.db}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// begin transaction</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">tx</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = gdddb.</span><span style="color:#DCDCAA;">BeginTxx</span><span style="color:#D4D4D4;">(ctx, </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(err, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">defer</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">recover</span><span style="color:#D4D4D4;">(); r != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;"> = tx.</span><span style="color:#DCDCAA;">Rollback</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ok</span><span style="color:#D4D4D4;"> := r.(</span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">); ok {</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(e, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">			} </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = errors.</span><span style="color:#DCDCAA;">New</span><span style="color:#D4D4D4;">(fmt.</span><span style="color:#DCDCAA;">Sprint</span><span style="color:#D4D4D4;">(r))</span></span>
<span class="line"><span style="color:#D4D4D4;">			}</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">	}()</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// inject tx as ddl.Querier into dao layer implementation instance</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">mdao</span><span style="color:#D4D4D4;"> := dao.</span><span style="color:#DCDCAA;">NewMaterialDao</span><span style="color:#D4D4D4;">(tx)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;"> := </span><span style="color:#C586C0;">range</span><span style="color:#D4D4D4;"> rows {</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(item) == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">goto</span><span style="color:#D4D4D4;"> END</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">make</span><span style="color:#D4D4D4;">([]</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, colNum)</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">copy</span><span style="color:#D4D4D4;">(row, item)</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> := row[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">price</span><span style="color:#D4D4D4;"> := cast.</span><span style="color:#DCDCAA;">ToFloat32</span><span style="color:#D4D4D4;">(row[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">spec</span><span style="color:#D4D4D4;"> := row[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">pieces</span><span style="color:#D4D4D4;"> := cast.</span><span style="color:#DCDCAA;">ToInt</span><span style="color:#D4D4D4;">(row[</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">amount</span><span style="color:#D4D4D4;"> := cast.</span><span style="color:#DCDCAA;">ToInt</span><span style="color:#D4D4D4;">(row[</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">note</span><span style="color:#D4D4D4;"> := row[</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#9CDCFE;">totalMount</span><span style="color:#D4D4D4;"> := pieces * amount</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = mdao.</span><span style="color:#DCDCAA;">Upsert</span><span style="color:#D4D4D4;">(ctx, domain.Material{</span></span>
<span class="line"><span style="color:#D4D4D4;">			Name:        name,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Amount:      amount,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Price:       price,</span></span>
<span class="line"><span style="color:#D4D4D4;">			TotalAmount: totalMount,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Spec:        spec,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Pieces:      pieces,</span></span>
<span class="line"><span style="color:#D4D4D4;">			Type:        </span><span style="color:#DCDCAA;">int8</span><span style="color:#D4D4D4;">(sliceutils.</span><span style="color:#DCDCAA;">IndexOf</span><span style="color:#D4D4D4;">(sheet, types)),</span></span>
<span class="line"><span style="color:#D4D4D4;">			Note:        note,</span></span>
<span class="line"><span style="color:#D4D4D4;">		}); err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#6A9955;">// rollback if err != nil</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;"> = tx.</span><span style="color:#DCDCAA;">Rollback</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(err, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">END:</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// commit</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = tx.</span><span style="color:#DCDCAA;">Commit</span><span style="color:#D4D4D4;">(); err != </span><span style="color:#569CD6;">nil</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;"> = tx.</span><span style="color:#DCDCAA;">Rollback</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> errors.</span><span style="color:#DCDCAA;">Wrap</span><span style="color:#D4D4D4;">(err, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> err</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><h4 id="query-dsl" tabindex="-1"><a class="header-anchor" href="#query-dsl" aria-hidden="true">#</a> Query Dsl</h4><h5 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example</h5><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">ExampleCriteria</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;school&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;havard&quot;</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;age&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">18</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;school&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;havard&quot;</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNotNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;school&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">In</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;havard&quot;</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNotNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;school&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">In</span><span style="color:#D4D4D4;">([]</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&quot;havard&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;beijing unv&quot;</span><span style="color:#D4D4D4;">})).</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNotNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;age&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">In</span><span style="color:#D4D4D4;">([]</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">{</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">})).</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNotNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Ne</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;create_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Lt</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;now()&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> := Page{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Orders: []Order{</span></span>
<span class="line"><span style="color:#D4D4D4;">			{</span></span>
<span class="line"><span style="color:#D4D4D4;">				Col:  </span><span style="color:#CE9178;">&quot;create_at&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">				Sort: sortenum.Desc,</span></span>
<span class="line"><span style="color:#D4D4D4;">			},</span></span>
<span class="line"><span style="color:#D4D4D4;">		},</span></span>
<span class="line"><span style="color:#D4D4D4;">		Offset: </span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Size:   </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> = page.</span><span style="color:#DCDCAA;">Order</span><span style="color:#D4D4D4;">(Order{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Col:  </span><span style="color:#CE9178;">&quot;score&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Sort: sortenum.Asc,</span></span>
<span class="line"><span style="color:#D4D4D4;">	})</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> = page.</span><span style="color:#DCDCAA;">Limit</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">30</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(page.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">pageRet</span><span style="color:#D4D4D4;"> := </span><span style="color:#DCDCAA;">NewPageRet</span><span style="color:#D4D4D4;">(page)</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(pageRet.PageNo)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">P</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Order</span><span style="color:#D4D4D4;">(Order{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Col:  </span><span style="color:#CE9178;">&quot;score&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Sort: sortenum.Asc,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}).</span><span style="color:#DCDCAA;">Limit</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wubin&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;school&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;havard&quot;</span><span style="color:#D4D4D4;">)).</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;age&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">18</span><span style="color:#D4D4D4;">)).</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">Or</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;score&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Gte</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">90</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(query.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">P</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Order</span><span style="color:#D4D4D4;">(Order{</span></span>
<span class="line"><span style="color:#D4D4D4;">		Col:  </span><span style="color:#CE9178;">&quot;create_at&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">		Sort: sortenum.Desc,</span></span>
<span class="line"><span style="color:#D4D4D4;">	}).</span><span style="color:#DCDCAA;">Limit</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> Q</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;project_id&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">Append</span><span style="color:#D4D4D4;">(page)</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(where.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;project_id&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">Append</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">String</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;for update&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(where.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.project_id&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.delete_at&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">IsNull</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = where.</span><span style="color:#DCDCAA;">Append</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">String</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;for update&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(where.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.survey_id&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;abc&quot;</span><span style="color:#D4D4D4;">).</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.year&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2021</span><span style="color:#D4D4D4;">)).</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.month&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">)).</span></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#DCDCAA;">And</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.stat_type&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Eq</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">Append</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">String</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;for update&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">	fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(where.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">where</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">C</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Col</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;cc.name&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">Like</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;</span><span style="color:#9CDCFE;">%b</span><span style="color:#CE9178;">a%&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    fmt.</span><span style="color:#DCDCAA;">Println</span><span style="color:#D4D4D4;">(where.</span><span style="color:#DCDCAA;">Sql</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">// Output:</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//((\`name\` = ? or \`school\` = ?) and \`age\` = ?) [wubin havard 18]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//((\`name\` = ? or \`school\` = ?) and \`delete_at\` is not null) [wubin havard]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//((\`name\` = ? or \`school\` in (?)) and \`delete_at\` is not null) [wubin havard]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//((\`name\` = ? or \`school\` in (?,?)) and \`delete_at\` is not null) [wubin havard beijing unv]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//((\`name\` = ? or \`age\` in (?,?)) and \`delete_at\` is not null) [wubin 5 10]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(\`name\` != ? or \`create_at\` &lt; ?) [wubin now()]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//order by \`create_at\` desc,\`score\` asc limit ?,? [30 5]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//7</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//order by \`score\` asc limit ?,? [20 10]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(((\`name\` = ? or \`school\` = ?) and \`age\` = ?) or \`score\` &gt;= ?) [wubin havard 18 90]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(\`project_id\` = ? and \`delete_at\` is null) order by \`create_at\` desc limit ?,? [1 0 1]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(\`project_id\` = ? and \`delete_at\` is null) for update [1]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(cc.\`project_id\` = ? and cc.\`delete_at\` is null) for update [1]</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#6A9955;">//(((cc.\`survey_id\` = ? and cc.\`year\` = ?) and cc.\`month\` = ?) and cc.\`stat_type\` = ?) for update [abc 2021 10 2]</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">//cc.\`name\` like ? [%ba%]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br></div></div><h3 id="add-dao-layer-code" tabindex="-1"><a class="header-anchor" href="#add-dao-layer-code" aria-hidden="true">#</a> Add Dao Layer Code</h3><p>In development, we must need to write some custom dao layer CRUD code. How? Let me explain it using <code>user</code> table as an example:</p><ul><li>At first, we should define methods of <code>UserDao</code> interface in <code>dao/userdao.go</code> file, for example:</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UserDao</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Base</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#DCDCAA;">FindUsersByHobby</span><span style="color:#D4D4D4;">(ctx context.Context, hobby </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) ([]domain.User, </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>We defined a <code>FindUsersByHobby</code> method here</p><ul><li><p>Then we should create a new file named <code>userdaoimplext.go</code> in <code>dao</code> folder. The file name can be arbitrary, but recommend to name it by table name got rid of prefix + <code>daoimplext.go</code> pattern</p></li><li><p>We write our own implementation for <code>FindUsersByHobby</code> method in the new file</p></li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> (receiver UserDaoImpl) </span><span style="color:#DCDCAA;">FindUsersByHobby</span><span style="color:#D4D4D4;">(ctx context.Context, hobby </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) (users []domain.User, err </span><span style="color:#4EC9B0;">error</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">sqlStr</span><span style="color:#D4D4D4;"> := </span><span style="color:#CE9178;">\`select * from ddl_user where hobby = ? and delete_at is null\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> = receiver.db.</span><span style="color:#DCDCAA;">SelectContext</span><span style="color:#D4D4D4;">(ctx, &amp;users, receiver.db.</span><span style="color:#DCDCAA;">Rebind</span><span style="color:#D4D4D4;">(sqlStr), hobby)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>We create a new file <code>userdaoimplext_test.go</code> to write unit tests</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">TestUserDaoImpl_FindUsersByHobby</span><span style="color:#D4D4D4;">(t *testing.T) {</span></span>
<span class="line"><span style="color:#D4D4D4;">	t.</span><span style="color:#DCDCAA;">Parallel</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">u</span><span style="color:#D4D4D4;"> := dao.</span><span style="color:#DCDCAA;">NewUserDao</span><span style="color:#D4D4D4;">(db)</span></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#9CDCFE;">users</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> := u.</span><span style="color:#DCDCAA;">FindUsersByHobby</span><span style="color:#D4D4D4;">(context.</span><span style="color:#DCDCAA;">Background</span><span style="color:#D4D4D4;">(), </span><span style="color:#CE9178;">&quot;football&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">	require.</span><span style="color:#DCDCAA;">NoError</span><span style="color:#D4D4D4;">(t, err)</span></span>
<span class="line"><span style="color:#D4D4D4;">	require.</span><span style="color:#DCDCAA;">NotEqual</span><span style="color:#D4D4D4;">(t, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(users))</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices" aria-hidden="true">#</a> Best Practices</h3><p>Below best practices are from author&#39;s experience, only for reference.</p><ul><li>Design all table structures by database design tools like <code>Navicat</code> or <code>Mysql Workbench</code> at the beginning of development.</li><li>Then run <code>go-doudou ddl --reverse --dao</code> to generate initial code. Using <code>--reverse</code> flag when initialising projects only.</li><li>At the following project iteration, after modified domain structs in <code>domain</code> folder, you should delete <code>sql.go</code> suffixed files such as <code>userdaosql.go</code> at first, then run <code>go-doudou ddl --dao</code> to sync changes to table structures and generate <code>sql.go</code> suffixed files at the same time. If you also changed table name or table name prefix, you should also delete <code>daoimpl.go</code> suffixed files such as <code>userdaoimpl.go</code> and regenerate them.</li><li>Custom dao layer code must be written in new files, don&#39;t modify <code>base.go</code> file, <code>daoimpl.go</code> suffixed files and <code>daosql.go</code> suffixed files manually. In the whole project lifecycle, you must make sure that these files could be removed and regenerated at any time, but not produce bugs to the program.</li></ul><h2 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h2><p>Subcommand for generating json tag of struct field. Default strategy is lower-camel. Support snake case as well. Unexported fields will be skipped, only modify json tag of each exported field.</p><h3 id="flags-2" tabindex="-1"><a class="header-anchor" href="#flags-2" aria-hidden="true">#</a> Flags</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">\u279C  go-doudou git:(main) go-doudou name -h   </span></span>
<span class="line"><span style="color:#D4D4D4;">WARN[0000] Error loading .env file: open /Users/wubin1989/workspace/cloud/.env: no such file or directory </span></span>
<span class="line"><span style="color:#D4D4D4;">bulk add or update struct fields json tag</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Usage:</span></span>
<span class="line"><span style="color:#D4D4D4;">  go-doudou name [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Flags:</span></span>
<span class="line"><span style="color:#D4D4D4;">  -f, --file string       absolute path of vo file</span></span>
<span class="line"><span style="color:#D4D4D4;">  -h, --help              </span><span style="color:#DCDCAA;">help</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> name</span></span>
<span class="line"><span style="color:#D4D4D4;">  -o, --omitempty         whether omit empty value or not</span></span>
<span class="line"><span style="color:#D4D4D4;">  -s, --strategy string   name of strategy, currently only support </span><span style="color:#CE9178;">&quot;lowerCamel&quot;</span><span style="color:#D4D4D4;"> and </span><span style="color:#CE9178;">&quot;snake&quot;</span><span style="color:#D4D4D4;"> (default </span><span style="color:#CE9178;">&quot;lowerCamel&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><ul><li>Put <code>//go:generate go-doudou name --file $GOFILE</code> into go file</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">//go:generate go-doudou name --file $GOFILE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Name      </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">	EventType </span><span style="color:#4EC9B0;">int</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">TestName</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Age    age</span></span>
<span class="line"><span style="color:#D4D4D4;">	School []</span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		Name </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">		Addr </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			Zip   </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">			Block </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">			Full  </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;">	EventChan </span><span style="color:#569CD6;">chan</span><span style="color:#D4D4D4;"> Event</span></span>
<span class="line"><span style="color:#D4D4D4;">	SigChan   </span><span style="color:#569CD6;">chan</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">int</span></span>
<span class="line"><span style="color:#D4D4D4;">	Callback  </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">bool</span></span>
<span class="line"><span style="color:#D4D4D4;">	CallbackN </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(param </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">bool</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>Execute <code>go generate ./...</code> at the same folder</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Name      </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;name&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	EventType </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">\`json:&quot;eventType&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">TestName</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">	Age    age </span><span style="color:#CE9178;">\`json:&quot;age&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	School []</span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">		Name </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;name&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">		Addr </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			Zip   </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;zip&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">			Block </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;block&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">			Full  </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;full&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">		} </span><span style="color:#CE9178;">\`json:&quot;addr&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	} </span><span style="color:#CE9178;">\`json:&quot;school&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	EventChan </span><span style="color:#569CD6;">chan</span><span style="color:#D4D4D4;"> Event              </span><span style="color:#CE9178;">\`json:&quot;eventChan&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	SigChan   </span><span style="color:#569CD6;">chan</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">                </span><span style="color:#CE9178;">\`json:&quot;sigChan&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	Callback  </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">bool</span><span style="color:#D4D4D4;">       </span><span style="color:#CE9178;">\`json:&quot;callback&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">	CallbackN </span><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;">(param </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#4EC9B0;">bool</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">\`json:&quot;callbackN&quot;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,93);function U(j,L){const a=p("ExternalLinkIcon");return o(),r(t,null,[i,s("ul",null,[y,s("li",null,[s("p",null,[d,u,b,C,m,h,s("a",g,[A,l(a)]),E])]),s("li",null,[s("p",null,[f,v,q,x,s("a",w,[k,l(a)]),_])]),B]),F,s("p",null,[I,s("a",N,[T,l(a)]),P,O,R]),S],64)}var H=c(D,[["render",U]]);export{H as default};
