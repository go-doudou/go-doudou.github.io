import{f as e}from"./app.594cd40c.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},a=e('<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>Go-doudou\uFF08doudou pronounce /d\u0259ud\u0259u/\uFF09is a gossip protocol based decentralized microservice framework. It supports monolith service application as well. Currently, it supports RESTful service only.</p><h3 id="why" tabindex="-1"><a class="header-anchor" href="#why" aria-hidden="true">#</a> Why?</h3><h4 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> Background</h4><ul><li>I&#39;m lazy, and I believe there are many developers like me.</li><li>I&#39;m not only an individual developer, but also a team leader with duty to make the whole team more productive</li><li>I am from a small company, we can&#39;t afford to recruit many senior developers, so my team members have different dev levels</li><li>I am from a small company, we don&#39;t have operation engineers</li></ul><h4 id="reason" tabindex="-1"><a class="header-anchor" href="#reason" aria-hidden="true">#</a> Reason</h4><ul><li>I need a tool to generate as much code as possible for us: if we don&#39;t know anything about tcp/ip/http/RESTFul/grpc/protobuf such low level things, and service register/service discover/failure detection/load balancing such microservice things, ONLY we know is CRUD, we still can develop robust programs/services out before the deadline. But I can&#39;t find such tool or framework.</li><li>I am a developer not an operation engineer, I don&#39;t like setting up many infrastructures myself. I mean I don&#39;t want to set up etcd or zookeeper cluster and maintain them myself. I find memberlist, a gossip library developed by hashicorp who also developed consul, so I decide to make a microservice framework using it to let every service discover each other by themselves.</li><li>I am a frontend developer in my early career, I know what a frontend developer want. So I choose OpenAPI 3.0 as bridge between frontend and backend. And I want to provide my frontend team members not only online documentation, but also mock server which can generating fake responses.</li></ul><h4 id="result" tabindex="-1"><a class="header-anchor" href="#result" aria-hidden="true">#</a> Result</h4><p>Go-doudou comes out, it&#39;s mainly inspired by</p><ul><li>https://github.com/kujtimiihoxha/kit: a code generator cli for go-kit</li><li>https://github.com/hashicorp/memberlist: golang package for gossip based membership and failure detection</li><li>https://spec.openapis.org/oas/v3.0.3: OpenAPI 3.0</li></ul><h3 id="design-philosophy" tabindex="-1"><a class="header-anchor" href="#design-philosophy" aria-hidden="true">#</a> Design Philosophy</h3><ul><li>Design First: We encourage designing your apis at the first place.</li><li>Contract: We use OpenAPI 3.0 spec as a contract between server and client to reduce the communication cost between different dev teams and speed up development.</li><li>Decentralization: We use gossip protocol based service register and discovery mechanism to build a robust, scalable and decentralized service cluster.</li></ul><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h3><ul><li>Low-code: design service interface to generate main function, routes, http handlers, mock service implementation, http client, OpenAPI 3.0 json spec and more.</li><li>Support DNS address for service register and discovery</li><li>Support both monolith and microservice architecture</li><li>Built-in service governance support including client-side load balancer, rate limiter, circuit breaker, bulkhead, timeout, retry and more.</li><li>Built-in graceful shutdown</li><li>Built-in live reloading by watching go files(not support windows)</li><li>Built-in service documentation UI</li><li>Built-in service registry UI</li><li>Built-in common used middlewares including tracing, logging, recover, request id, prometheus and more.</li><li>Built-in docker and k8s deployment support: dockerfile, deployment kind yaml file and statefulset kind yaml file</li><li>Easy to learn, simple to use</li></ul>',14);function o(t,n){return a}var d=i(r,[["render",o]]);export{d as default};
